/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

backgroundMesh
{
xMin -117.68388 ;
xMax 117.31612 ;
yMin -66.19718 ;
yMax 65.82942 ;
zMin -100.0 ;
zMax 136.6927604675293 ;
xCells     40 ;
yCells     30 ;
zCells     15 ;
}

convertToMeters 1; // in meters , if kms 10 

vertices
(
    ($:backgroundMesh.xMin $:backgroundMesh.yMin $:backgroundMesh.zMin)
    ($:backgroundMesh.xMax $:backgroundMesh.yMin $:backgroundMesh.zMin)
    ($:backgroundMesh.xMax $:backgroundMesh.yMax $:backgroundMesh.zMin)
    ($:backgroundMesh.xMin $:backgroundMesh.yMax $:backgroundMesh.zMin)

    ($:backgroundMesh.xMin $:backgroundMesh.yMin $:backgroundMesh.zMax)
    ($:backgroundMesh.xMax $:backgroundMesh.yMin $:backgroundMesh.zMax)
    ($:backgroundMesh.xMax $:backgroundMesh.yMax $:backgroundMesh.zMax)
    ($:backgroundMesh.xMin $:backgroundMesh.yMax $:backgroundMesh.zMax)
);

blocks
(
    hex (0 1 2 3 4 5 6 7)
    (
        $:backgroundMesh.xCells
        $:backgroundMesh.yCells
        $:backgroundMesh.zCells
    )
    simpleGrading (1 1 3)
);

edges
(
);

boundary
(
    outlet
    {
        type patch;
        faces
        (
            (0 3 7 4)
        );
    }

    inlet
    {
        type patch;
        faces
        (
            (1 5 6 2)
        );
    }

    sides
    {
        type patch;
        faces
        (
            (1 5 4 0)
            (3 7 6 2)
        );
    }
    ground
    {
        type patch;
        faces
        (
            ( 0 3 2 1)
        );
    }
   top
    {
        type patch;
        faces
        (
            (4 5 6 7)
 
            );
     }        
);

mergePatchPairs
(
);

// ************************************************************************* //
